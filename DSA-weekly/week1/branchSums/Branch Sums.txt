Branch Sums

  Description

  Write a function that takes in the root of a Binary Tree and returns a list of its branch
  sums ordered from leftmost branch sum to rightmost branch sum.

  A branch sum is the sum of all values in a Binary Tree branch. A Binary Tree
  branch is a path of nodes in a tree that starts at the root node and ends at
  any leaf node.

  Each BinaryTree node has an integer value, a
  left child node, and a right child node. Children
  nodes can either be BinaryTree nodes themselves or
  undefined / null.

	Sample Input

tree =     1
        /     \
       2       3
     /   \    /  \
    4     5  6    7
  /   \  /
 8    9 10

root = {
	value: 1,
	left: {value: 2.....},
	right: {value: 3.....}
};

  Sample Output

[15, 16, 18, 10, 11]
// 15 == 1 + 2 + 4 + 8
// 16 == 1 + 2 + 4 + 9
// 18 == 1 + 2 + 5 + 10
// 10 == 1 + 3 + 6
// 11 == 1 + 3 + 7

  Function Declaration

const branchSums = (root) => {
  
}

  Target Complexity

O(n) time | O(n) space - where n is the number of nodes in the Binary Tree
